<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        l+HfU6LHaxv3PuOMM9rXv/714fG4Pq6N10Kme4zrsf/vfve79oc//GG4huj99a9/fcj8w42D6p2PT4bz
        xGSdJz3pSe073/nO8Jg335ve9KaH3Hwxn+0xZu985zvb1772teExb/gvfvGL7ZprrhkeZ/MZH/vYx9qX
        v/zldvbZZ7frr79++HrzzTcPa+4eBxqlmy9ebb///e+HbzZ7JU+57e7WbryjtZv2+7+3t3bLXfsXQTy5
        l1xySfvxj388/Hvc64477mg//elPh8fBT37yk/anP/1p/7/2ceONN7Zf/vKX7fOf//xwc0T/C1/4Qrvv
        vvv2N/7GTTfd1H7zm9+0K6+8sl133XVDNr3upzzlKbs3xvg9xk0Ycxl//vOfh7PHdzgS71axHoznRHbc
        cce1N7zhDcPPcuTee+9tP/zhD3ev++c///nQHYn9f/azn7WLL764nXnmme1d73pXu+WWW4a17Gf/cMC6
        +cZvLp7oD37wg8Pj8V0hY/xRHH9Ja//0H60dfXFrJ17e2r/u/PuE/9y3Nu4ZP8CnP/3p7cUvfnF797vf
        PWTj3nHeYx7zmOGmiifiiU984vCrJxjnn/zkJ7fnP//57ZnPfGY76qij2qte9aphJp7cIPYa93vZy17W
        Hve4xw1rj370o9s3v/nNIeevu9hv+s4X1/HYxz623XPPPcO/x7Nvv/32dswxx7TnPOc57RWveEX74x//
        OOTj3LOf/ez2yU9+cngcL9wgXhiPfOQjh3PinSyI/eIajjzyyPbd7353yJ72tKftXkcQL7xf/epX7Uc/
        +lG76qqrhmvnzflwpHTzxTd/+umnt8suu6x961vfGt6Z4ocS/OAHP9h9lT+w/+77l52f+yFnt3bcp1v7
        t6taO/XK1k75731r4xP02c9+th199NHD4/GcYHx8/PHHD+9EV1999fB5LIjZcf0JT3hC+9KXvjQ8eY94
        xCPar3/96+EdJJ7IkfHdJG7S17zmNcPjs846a7jhg/Faguzmi3fMxz/+8bs337jfaaed1l70ohcNj7nH
        +PiEE07YvfkiG/N4EXz4wx8eHjN/5Stf2c4555zhBfbUpz71714UByOlmy+e2FNOOWV4J3jrW986/CqI
        JzFe1W9/+9t3f1jjzXfsp3YO2HkzO+KCnZvo0n3vhCf/1761kbhhn/vc57ZHPepRw2ehIPYZn5B4guPz
        TfyaibOCcS2Id83vfe97wzXEu1O8G8ULIm7K8brHm+UFL3hBe//73z88/tznPjfc2AGf5MrNd/LJJ+/u
        N77wgnFO3XwvfelL2wc+8IHhcWTj+ZdffvnwDnrFFVcMX4NxhsT3NX5vD2dKN188CXEjBBdddNHwYTo+
        q8WH4U99audO2yF+WOOPJW62uPkO+9C+G/DwHePXLxn3jne2+FUYN08w/tDjRjjppJOGmz5usoA3y7HH
        Htu+//3vD/34dRu/+uLzXPwKHuHN8o53vGN4/IlPfKKdeOKJw2M+wfGOM37mG/P4vuNX/vTme/nLXz68
        6ALuMT6OF9WnP73ztr9DZGN+6qmnto9+9KPDY87Fr9F4d37hC1/YLr1059W6A9cPNko3X3w+i18zd911
        V3vb2942vAPGr7i4Afjhd7z5jr1o54DTWvvnM3f8953HZ7R21IX71h7Y//YYN84FF1wwvOrj89idd945
        5Hxlx1+gcVNkxGejuCnjSTr88MN3/0iJd8Fxj/FmiV+zRxxxxHBDxx8W55577pDzCY6PAN/+9reHx2M+
        fvYc393G/Bvf+EY77LDDhj8CPv7xjz/khfOsZz0rfed79atfPdxk4x8xcZ3jWvzqPfTQQx/y2fZgxLr5
        Ru6+++72mc98ZvijI35tBfGX6hvf+Mbh8fQHdcUNrZ2z8/n5Q9fu89z/ae2y6/etjd1f/OIX7bWvfe1w
        Y4x/AIxr4xMSf0S8/vWvHx6P2UhcS1xDzLznPe8Z/jj57W9/2973vvftb/xt5iUveUl7y1veMvyfXfzF
        mHHeeec95L8w4q/S9773vbs3cTCuffWrXx1ekLHn+Jf4+M584YUX7v6fYfTHmfirNd7dso8Z559/fvpx
        4GCkdPNlxJP1la98ZXg89w9rfLKe8Yxn7N7sezljfGLjM188uUFk4/57pXeejNf4ute9bveFMWYHK+Wb
        L34gcQPEDz7eCW644QZ5Q9y/89zct7N0X3zd/zgyMu4TZvvE56b41SrPwBP0/z2Od9ePfOQjw+PpfxiP
        cI6oPK4rrj1bjyy7QcfveVwbv7f4Iy5+jd92223Dv7PZg4fW/g+195oXJ6CzQwAAAABJRU5ErkJggg==
</value>
  </data>
</root>